/**
 * Syntax highlighting styles
 */
 // TODO add more highlighting variables as we go
.highlight {
    @extend %vertical-rhythm;
  
    .highlighter-rouge & {
      @include themed() {
        background: theme($code-background);
      }
    }
  
    .c     { @include themed() { color: theme($comment-colour); } font-style: italic } // Comment
    .err   { @include themed() { color: theme($error-colour); background-color: theme($error-background-colour) } } // Error
    .k     { font-weight: bold } // Keyword
    .o     { font-weight: bold } // Operator
    .cm    { @include themed() { color: theme($comment-colour); } font-style: italic } // Comment.Multiline
    .cp    { @include themed() { color: theme($comment-colour); } font-weight: bold } // Comment.Preproc
    .c1    { @include themed() { color: theme($comment-colour); } font-style: italic } // Comment.Single
    .cs    { @include themed() { color: theme($comment-colour); } font-weight: bold; font-style: italic } // Comment.Special
    .gd    { color: #000; background-color: #fdd } // Generic.Deleted
    .gd .x { color: #000; background-color: #faa } // Generic.Deleted.Specific
    .ge    { font-style: italic } // Generic.Emph
    .gr    { @include themed() { color: theme($error-colour) } } // Generic.Error
    .gh    { color: #999 } // Generic.Heading
    .gi    { color: #000; background-color: #dfd } // Generic.Inserted
    .gi .x { color: #000; background-color: #afa } // Generic.Inserted.Specific
    .go    { color: #888 } // Generic.Output
    .gp    { color: #555 } // Generic.Prompt
    .gs    { font-weight: bold } // Generic.Strong
    .gu    { color: #aaa } // Generic.Subheading
    .gt    { color: #a00 } // Generic.Traceback
    .kc    { font-weight: bold } // Keyword.Constant
    .kd    { font-weight: bold } // Keyword.Declaration
    .kp    { font-weight: bold } // Keyword.Pseudo
    .kr    { font-weight: bold } // Keyword.Reserved
    .kt    { color: #458; font-weight: bold } // Keyword.Type
    .m     { color: #099 } // Literal.Number
    .s     { @include themed() { color: theme($string-literal-colour) } } // Literal.String
    .na    { color: #008080 } // Name.Attribute
    .nb    { color: #0086B3 } // Name.Builtin
    .nc    { color: #458; font-weight: bold } // Name.Class
    .no    { color: #008080 } // Name.Constant
    .ni    { color: #800080 } // Name.Entity
    .ne    { color: #900; font-weight: bold } // Name.Exception
    .nf    { color: #900; font-weight: bold } // Name.Function
    .nn    { color: #555 } // Name.Namespace
    .nt    { color: #000080 } // Name.Tag
    .nv    { color: #008080 } // Name.Variable
    .ow    { font-weight: bold } // Operator.Word
    .w     { color: #bbb } // Text.Whitespace
    .mf    { color: #099 } // Literal.Number.Float
    .mh    { color: #099 } // Literal.Number.Hex
    .mi    { color: #099 } // Literal.Number.Integer
    .mo    { color: #099 } // Literal.Number.Oct
    .sb    { @include themed() { color: theme($string-literal-colour) } } // Literal.String.Backtick
    .sc    { @include themed() { color: theme($string-literal-colour) } } // Literal.String.Char
    .sd    { @include themed() { color: theme($string-literal-colour) } } // Literal.String.Doc
    .s2    { @include themed() { color: theme($string-literal-colour) } } // Literal.String.Double
    .se    { @include themed() { color: theme($string-literal-colour) } } // Literal.String.Escape
    .sh    { @include themed() { color: theme($string-literal-colour) } } // Literal.String.Heredoc
    .si    { @include themed() { color: theme($string-literal-colour) } } // Literal.String.Interpol
    .sx    { @include themed() { color: theme($string-literal-colour) } } // Literal.String.Other
    .sr    { color: #009926 } // Literal.String.Regex
    .s1    { @include themed() { color: theme($string-literal-colour) } } // Literal.String.Single
    .ss    { color: #990073 } // Literal.String.Symbol
    .bp    { color: #999 } // Name.Builtin.Pseudo
    .vc    { color: #008080 } // Name.Variable.Class
    .vg    { color: #008080 } // Name.Variable.Global
    .vi    { color: #008080 } // Name.Variable.Instance
    .il    { color: #099 } // Literal.Number.Integer.Long
}
